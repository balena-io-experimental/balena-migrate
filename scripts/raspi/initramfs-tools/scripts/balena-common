#!/bin/sh


logMsg() {
	if [ -z "$LOG_TO" ] ; then
		fail "logMsg LOG_TO not set"
	fi

	if [ ! -f $LOG_TO ] ; then
		LOG_DIR=$(dirname $LOG_TO)
		if [ ! -d $LOG_DIR ] ; then
			mkdir -p $LOG_DIR	|| fail  "failed to create directory $LOG_DIR"
		fi
  fi

	echo $1 >> "$LOG_TO"
}

log_to() {
  NEW_LOG=$1
  if [ -n "$LOG_TO" ] ; then
    cp "$LOG_TO" "$NEW_LOG"
  fi
  LOG_TO=$NEW_LOG
}

log() {
	logMsg "LOG: $1"
}

term() {
	logMsg "TERM: $1"
	if [ "$FAIL_EXIT" = "EXIT" ] ; then
		cat "$LOG_TO"
		panic  $1
  else
		reboot -f
	fi
}

fail() {
	logMsg "ERROR: $1"
  if [ "$FAIL_EXIT" = "EXIT" ] ; then
		cat "$LOG_TO"
		panic  $1
  else
		reboot -f
	fi
}

log_mount()
{
        read_fstab_entry "$LOG_MOUNT_DIR"

				MNT_FSNAME=$LOG_DRIVE
				MNT_DIR=$LOG_MOUNT_DIR
				MNT_TYPE=$LOG_FS_TYPE
				MNT_OPTS=
				MNT_FREQ=0
				MNT_PASS=0
				MNT_JUNK=

				log "log device setup: $MNT_FSNAME"
        local_device_setup "$MNT_FSNAME" "$LOG_MOUNT_DIR file system"
        MNT_FSNAME="${DEV}"

        #  FIXME This has no error checking
        modprobe "${MNT_TYPE}"

				log "MNT_PASS = $MNT_PASS"
        if [ "$MNT_PASS" != 0 ]; then
                checkfs "$MNT_FSNAME" "$MNT_DIR" "${MNT_TYPE}"
        fi

				log "creating log mount point ${LOG_MOUNT_DIR}"
				mkdir -p "${LOG_MOUNT_DIR}" || fail "failed to create log mount point ${LOG_MOUNT_DIR}"
				if [ ! -d "${LOG_MOUNT_DIR}" ] ; then
				     fail  "failed to create directory in ${LOG_MOUNT_DIR}"
				fi
				log "...done"

        # FIXME This has no error checking
        # Mount filesystem
				if [ -n "$MNT_OPTS" ] ; then
					MNT_OPTS="-o $MNT_OPTS"
				fi

				log "attempt: mount -w -t ${MNT_TYPE} ${MNT_OPTS} $MNT_FSNAME ${LOG_MOUNT_DIR}"
				mount -w -t ${MNT_TYPE} ${MNT_OPTS} $MNT_FSNAME "${LOG_MOUNT_DIR}"
				log "...done"
}
