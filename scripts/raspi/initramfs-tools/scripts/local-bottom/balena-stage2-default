#!/bin/sh

PREREQ=""
prereqs()
{
	echo "$PREREQ"
}

case $1 in
prereqs)
	prereqs
	exit 0
	;;
esac

set -e

if [ -f /scripts/functions ] ; then
    . /scripts/functions
fi

if [ -f /scripts/local ] ; then
    . /scripts/local
fi


if [ -f /etc/balena-migrate.conf ] ; then
    . /etc/balena-migrate.conf
else
    panic  "balena-migrate.conf not found"
fi

if [ -f /scripts/balena-common ] ; then
    . /scripts/balena-common
else
		panic  "/scripts/balena-common not found"
fi

if [  "$STRATEGY" != "DEFAULT" ] ; then
    log_success_msg "local-premount balena-stage2-resized not enabled"
    exit 0
fi

# TODO: make sure required programs are actually present

FAIL_EXIT="EXIT"

log "local-premount balena-stage2 started params: $1 $2 $3"

log "creating migrate dir ${MIGRATE_TMP}"
mkdir -p ${MIGRATE_TMP}
if [ ! -d ${MIGRATE_TMP} ] ; then
     fail  "failed to create directory in ${MIGRATE_TMP}"
fi
log "...done"

log "copying image from ${rootmnt}${HOME_DIR}/${IMAGE_FILE} to ${MIGRATE_TMP}/"
cp "${rootmnt}${HOME_DIR}/${IMAGE_FILE}" "${MIGRATE_TMP}/" || fail  "failed to copy ${rootmnt}${HOME_DIR}/${IMAGE_FILE}  to ${MIGRATE_TMP}/"
log "..done"

if [ -f "${rootmnt}${HOME_DIR}/${BACKUP_FILE}" ] ; then
	log "copying backup from ${rootmnt}${HOME_DIR}/${BACKUP_FILE} to ${MIGRATE_TMP}/"
	cp "${rootmnt}${HOME_DIR}/${BACKUP_FILE}" "${MIGRATE_TMP}/" || fail  "failed to copy ${rootmnt}${HOME_DIR}/${IMAGE_FILE}  to ${MIGRATE_TMP}/"
	log "..done"
fi

log "copying network config files"
for file in "${rootmnt}${HOME_DIR}/resin-wifi-*"; do
	cp "$file" "${MIGRATE_TMP}/" || fail  "failed to copy ${file to ${MIGRATE_TMP}/"
done
log "..done"

log "creating mountpoint on ${ROOTA_MNT_DIR}"
mkdir -p ${ROOTA_MNT_DIR}
if [ ! -d ${ROOTA_MNT_DIR} ] ; then
     fail  "failed to create mount directory in ${ROOTA_MNT_DIR}"
fi
log "..done"

log "creating mountpoint on ${DATA_MNT_DIR}"
mkdir -p ${DATA_MNT_DIR}
if [ ! -d ${DATA_MNT_DIR} ] ; then
     fail  "failed to create mount directory in ${DATA_MNT_DIR}"
fi
log "..done"

if [ "$NO_FLASH" = "TRUE" ] ; then
	log "terminating prematurely"
	saveLog
	exit 0
fi

log "unmounting root"
umount ${rootmnt} || fail  "failed umount ${rootmnt}"
# TODO: remount as third exit ?
FAIL_EXIT="REBOOT"
log "..done"

if [ -n "$LOG_DRIVE" ] ; then
	log_mount ||  fail "failed to mount log dir"
fi

log "flashing image from ${MIGRATE_TMP}/${IMAGE_FILE} to ${ROOT_DEV} "
log "attempting gzip -d -c ${MIGRATE_TMP}/${IMAGE_FILE} | dd of=${ROOT_DEV} bs=4M \n"
gzip -d -c "${MIGRATE_TMP}/${IMAGE_FILE}" | dd of=${ROOT_DEV} bs=4194304 || fail  "failed with gzip -d -c ${MIGRATE_TMP}/${IMAGE_FILE} | dd of=${ROOT_DEV} bs=4194304"
log "..done"

partprobe $ROOT_DEV >>${MIGRATE_TMP}/${LOG_FILE} 2>&1 || fail  "failed to reread partitions on $ROOT_DEV"

log_begin_msg "mounting resin-rootA on $DATA_MNT_DIR"
mount -w -t "$IMG_ROOTA_TYPE" "$IMG_ROOTA_NAME" "$ROOTA_MNT_DIR" >>${MIGRATE_TMP}/${LOG_FILE} 2>&1 || fail  "failed to mount resin-rootA partition"
log "..done"

# copy networking config
cp "${MIGRATE_TMP}/resin-wifi-*" "$ROOTA_MNT_DIR/etc/NetworkManager/system_connections/" || fail "failed to copy network config"

log_begin_msg "mounting resin-data on $DATA_MNT_DIR"
mount -w -t "$IMG_DATA_TYPE" "$IMG_DATA_NAME" "$DATA_MNT_DIR" >>${MIGRATE_TMP}/${LOG_FILE} 2>&1 || fail  "failed to mount resin-data partition"
log "..done"

if [ -f "${MIGRATE_TMP}/${BACKUP_FILE}" ] ; then
	log "copying backup to resin-data"
	cp "$MIGRATE_TMP/$BACKUP_FILE" "$DATA_MNT_DIR" >>${MIGRATE_TMP}/${LOG_FILE} 2>&1 || fail "failed to create backup"
	sync
	log "...done"
fi

saveLog || true
sync || true
reboot -f
