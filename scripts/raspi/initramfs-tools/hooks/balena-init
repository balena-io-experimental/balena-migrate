#!/bin/sh

PREREQ=""
prereqs()
{
	echo "$PREREQ"
}

case $1 in
prereqs)
	prereqs
	exit 0
	;;
esac

. /usr/share/initramfs-tools/hook-functions
# Begin real processing below this line

copyPgm() {
    local pgm="$1"

    local pgmPath="$(whereis -b $pgm | awk '{ print $2}')"

    # echo "$pgm: -> $pgmPath"
    if [ -z "${pgmPath}" ] ; then
        echo "could not find ${pgmPath}"
    fi

    echo "[balena-init] copy ${pgmPath}"

    copy_exec ${pgmPath}
}

##############################
# main                       #
##############################


REQUIRED_PGMS="mkdir dd gzip grep awk tar cp fuser df echo rm reboot sleep umount"

if [ -f /etc/balena-migrate.conf ] ; then
    # TODO: move ?
    . /etc/balena-migrate.conf
else
    echo "could not find /etc/balena-migrate.conf"
    exit 1
fi

if [ "$STRATEGY" = "RESIZE" ] ; then
   REQUIRED_PGMS="$REQUIRED_PGMS parted mke2fs resize2fs e2fsck partprobe"
fi

if [ "$STRATEGY" = "TMPFS" ] ; then
    REQUIRED_PGMS="$REQUIRED_PGMS parted free"
fi

for pgmName in ${REQUIRED_PGMS}
do
    copyPgm ${pgmName}
done

echo "[balena-init] dest dir ${DESTDIR}"

# cp "$IMAGE_FILE" "${DESTDIR}/"
# cp "$BACKUP_FILE" "${DESTDIR}/"
# mkdir -p "${DESTDIR}/etc"
cp /etc/balena-migrate.conf "${DESTDIR}/etc/"

exit 0
